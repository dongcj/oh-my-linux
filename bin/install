#!/usr/bin/env bash
#
# Author: dongcj <ntwk@163.com>
# description:
#


#################################################################
## 1. ENV setting
##
#################################################################
# import functions
cd $(dirname $0)
. ../lib/functions

THIS_FUN=`File_Converter fun $0`
THIS_LOG=`File_Converter log $0`
THIS_RUN=${RUN_DIR}/${DIALOG_ANS_FILE_FINAL}


# 测试先导入dialog.run,因为此时还没有运行dialog, 后面要删除
. ../lib/dialog.fun
. ../lib/preinstall.fun
. $THIS_FUN




#################################################################
## 2. Remote execution setting: if you want remote exec function,
## ++ use -F <FUNCTION>, remote will only run function and exit
#################################################################
# std output format like the Log function
if [ "$1" = "-F" -o  "$1" = "--function" ]; then
    if [ -z "$2" ]; then
        Log ERROR "Usage：$0 -F \"<FUNCTION_NAME> [args]\"\n"
    fi
    Log DEBUG "------ RUN \"$2\" on $(hostname -s)..."
    # TODO: who can tell me how to add two "space" in the line echo?
    PS4="  "

    # only one Concurrent
    lockfile=${TMP_DIR}/$2.lock
    if [ -f $lockfile ]; then
        Log ERROR "lockfile $lockfile exists, my be another is running?"
    else
        $2
    fi

    if [ $? -eq 0 ]; then
        rm -rf $lockfile
        Log SUCC "------ RUN \"$2\" success\n"
        exit 0
    else
        rm -rf $lockfile
        Log ERROR "------ RUN \"$*\" failed\n"
    fi
fi




## TODO
#################################################################
## 3. deal with the user setting & user args
## eg: slice_mode_prompt
#################################################################

# default: -i --log-level=INFO  --ALL



## Methods
# --deployvm    -d
# --install     -i
# --uninstall   -u
# --add         -a
# --remove      -r
# --upgrade     -U
# --function    -F

# --help        -h
# --version     -v



## Control
# --control     -c
    # --start
    # --stop
    # --status
    # --show

## Options
# --mix-mode    -m          # 超融合部署方式(会影响网络设置: bond, bridge)
# --no-prompt   -q
# --force       -f

# --log-level=[DEBUG|INFO|ERROR]


## Storage Type
# Ceph FileSystem
# Ceph Block Storage
# Ceph Object Storage


## Components
# --ALL
# --MON
# --OSD             (depend on MON installed)
# --OSD-disk
# --MDS
# --MWEB                # Monitor web
# --TEST


## setting args
# --set ARG=VALUE       # overwrite the settings.conf




# 一、 安装类型(Ceph FileSystem, Ceph Block Storage, Ceph Object Storage)
# 二、 直接编辑所有的服务器及充当角色






#################################################################
## 4. Main install step from launcher.ini
#################################################################






# Show welcome
Show_Welcome



# Check launcher file first
INI_Checker ${CONF_DIR}/${LAUNCHER}



# Dialog_Question,
Dialog_Question


# check & Update ans file
ANS_Check_And_Update



# get the basic ans value that used by blow
ANS_Basic_Value_Get


# gen hosts file for ceph-ai
Gen_Hosts_File



# set hosts & hostname for ceph-ai
Set_Hosts_Hostname



# Use ping to check all hosts alive
Ping_Test



# ssh to host with passwdless
SSH_Through



# rsync software is NOT installed by default
SCP_File "$ALL_HOST" "$BASE_DIR" "$(dirname $BASE_DIR)"



# set ssh faster
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Set_SSH_Server'" $timeout



# set hostname & hosts
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Set_Hosts_Hostname'" $timeout



# get the netmask info
# ceph config use ip & netmask calc the network
ANS_Update_Network



# get the ans value that used by blow
ANS_Advanced_Value_Get



# update & prepare ceph-ai repo server
Update_RepoData


# prepare the yum repo
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Repo_Prepare'" $timeout


# install basic software
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Install_Basic_Soft'" $timeout


# rsync file to all host
Rsync_File "$ALL_HOST" "$BASE_DIR" "$(dirname $BASE_DIR)"






#################################################################
## check os
#################################################################
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Check_OS 7'" $timeout




#################################################################
## get the host info
#################################################################
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Get_HostInfo'" $timeout


#################################################################
## prepare ceph-ai server(use for the first time)
#################################################################
#Config_NTP_Server


#################################################################
## get the host info
#################################################################
Network_CheckDevice



#################################################################
## Config system
#################################################################
Remote_Exec "${ALL_HOST}" "${BIN_DIR}/$(basename $0) -F 'Config_System'" $timeout



#################################################################
## get the clusterstatus & prompt for install
#################################################################
Ceph_MON_Installed_Prompt




#################################################################
## render the ceph conf template
#################################################################
Ceph_Conf_Generater

#################################################################
## GenMonmap on installer
#################################################################
Ceph_MON_Install_GenMonmap



#################################################################
## rsync the ${RUN_DIR} to all of the host
#################################################################
Rsync_File "$ALL_HOST" "$RUN_DIR" "$BASE_DIR"



#################################################################
## install / uninstall mon
#################################################################
Remote_Exec "${MON_HOST}" "${BIN_DIR}/$(basename $0) -F 'Ceph_MON_Install'" $timeout




#################################################################
# use ${RUN_DIR}/${HOSTINFO_FILE} to check the disk and prompt user
# TODO: lvm disk not recommand, if check lvm on none-root disk
# ++ prompt to reinstall os or remove pvs
#################################################################
Ceph_OSD_Disk_Check




#################################################################
## osd assign & ceph conf updater
#################################################################
Ceph_OSD_Assign


Ceph_Conf_Update_OSD


Rsync_File "$ALL_HOST" "$RUN_DIR" "$BASE_DIR"


#################################################################
## partition disk & Mount & install
#################################################################
Remote_Exec "${OSD_HOST}" "${BIN_DIR}/$(basename $0) -F 'Ceph_OSD_Disk_Prepare'" $timeout


#################################################################
## OSD install
#################################################################
Remote_Exec "${OSD_HOST}" "${BIN_DIR}/$(basename $0) -F 'Ceph_OSD_Install'" $timeout


#################################################################
## Check osd install status
#################################################################
Remote_Exec "${OSD_HOST}" "${BIN_DIR}/$(basename $0) -F 'Ceph_Check_Status'" $timeout



#################################################################
## MDS installation, depends on $CEPH_INSTALL_MODE="fs"
#################################################################
Ceph_Conf_Update_MDS
Remote_Exec "${MDS_HOST}" "${BIN_DIR}/$(basename $0) -F 'Ceph_MDS_Install'" $timeout





## TODO: 实现不同的step等级显示不同等级的分隔符, 调用函数时的分隔符等


