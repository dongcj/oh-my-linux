#!/usr/bin/env bash
#
# Author: dongcj <ntwk@163.com>
# description: 
#


######################################################################
# 区域: frame setting
# 作用: 框架程序设定
# 注意：
######################################################################

# DEBUG: yes | no
DEBUG=yes


# GUI: shell | dialog | yad
GUI=shell




# LANGUAGE: en | cn
LANGUAGE=en



# you CAN NOT continue unless you got a key
KEY=



# SILENCE_MODE:  yes | no
SILENCE_MODE=no




# program run from this file
LAUNCHER=launcher_install.ini



# TESTMODE: cbt | ait |  all
# cbt: use cbt test
# ait: ai test
# all: cbt + ait
TESTMODE=ait




# shell window size test
PROBE_SHELL_WINDOW=TRUE



######################################################################
# 区域: frame path define
# 作用: 框架所用到的路径
# 注意：
######################################################################

# must run as root user
[ `id -u` -ne 0 ] && Log ERROR "Please use root to login!"

# basic path define
PATH='/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin'
export PATH

## Define the directory and file location
#+ the caller already use: cd $(dirname $0) 
BASE_DIR=$(dirname `pwd`)

# if BASE_DIR contain space
if [ `echo $BASE_DIR | tr -d ' '` != "$BASE_DIR" ]; then
    echo 
    echo "  Work path contain space will case error!!!"
    echo "  Please change another path, exiting now"
    exit 250
fi
#BASE_DIR=${BASE_DIR/ /\\ }

# This program info & directory
BIN_DIR="${BASE_DIR}/bin"
CONF_DIR="${BASE_DIR}/conf"
DATA_DIR="${BASE_DIR}/data"
DOC_DIR="${BASE_DIR}/doc"
LIB_DIR="${BASE_DIR}/lib"
LOG_DIR="${BASE_DIR}/log"
RUN_DIR="${BASE_DIR}/run"
SCRIPT_DIR="${BASE_DIR}/script"
TEST_DIR="${BASE_DIR}/test"
TMP_DIR="${BASE_DIR}/tmp"

chmod -R 777 ${TMP_DIR}

# all log will "tee -a" to this log file
MAIN_LOG="main.log"

# define report server
REPORT_SERVER=ceph-ai

# define admin email user, default is admin
MAIL_TO=ntwk@163.com




######################################################################
# 区域: Base env get
# 作用: 通用取值变量,如my IP,  my hostname, 这些值如果取错了, just image.
# 注意：变量以 "MY_" 做为前缀
######################################################################

# get Local IP & hostname(use default route ethernet as my ip)
NET_USE_ETHER=`ip route list | grep "default" | sed -n '1p' | awk '{print $5}'`

# TODO: if no route, use first up ip as my ip(do you have any other good idea?)
if [ -z "$NET_USE_ETHER" ]; then
    NET_USE_ETHER=`ip link | grep UP | awk '{print $2}' | tr -d ':' | grep -v lo | sed -n '1p'`
fi

# if no
[ -z "$NET_USE_ETHER" ] && echo "Can not get Ethernet name, use \"netstat -rn \
| grep "0.0.0.0" | sed -n '1p' | awk '{print $NF}'\"" && exit 250

MY_IP=`ip addr show $NET_USE_ETHER | awk '/inet /{split($2,x,"/"); print x[1]}'`
MY_HOSTNAME=`hostname -s`
export MY_IP MY_HOSTNAME





######################################################################
# 区域: vm define
# 作用: 定义虚拟机配置 
# 注意：
######################################################################
# vm config
CEPH_AI_VM_DATA_FILE=${DATA_DIR}/vm_ceph_ai.qcow2.tar.gz
CEPH_AI_VM_XML_FILE=${CONF_DIR}/vm_ceph_ai.xml.template
CEPH_AI_VM_TARGET_DIR=/opt/ceph-ai
CEPH_AI_VM_SIZE=40
CEPH_AI_VM_MAC="52:54:00:00:27:18"
CEPH_AI_VM_NAME=ceph-ai


# vm os conf
CEPH_AI_IP_OOB=10.85.139.4
CEPH_AI_IP=192.168.120.228
CEPH_AI_NETMASK=255.255.255.0
CEPH_AI_GATEWAY=192.168.120.1
CEPH_AI_DNS=202.96.134.133
CEPH_AI_VM_HOSTNAME=ceph-ai






######################################################################
# 区域: frame variable define
# 作用: 框架定义的一些变量, 比如生成tmpfile, 一般需要跨越多个函数时用
# 注意：
######################################################################




# push至ceph-ai的${RUN_DIR}/hostinfo.pusher.${hostname -s}
HOSTINFO_FILE=hostinfo.pusher


# hosts tmp file to ${TMP_DIR}/${HOSTS_TMP_FILE}
DIALOG_ANS_ABOUT_HOST=ans_host.out


# dialog tmp output to ${TMP_DIR}/${DIALOG_ANS_FILE_TMP}
DIALOG_ANS_FILE_TMP=ans.tmp

# dialog first output to ${TMP_DIR}/${DIALOG_ANS_FILE}
DIALOG_ANS_FILE=ans.out

# dialog final to ${RUN_DIR}/${DIALOG_ANS_FILE_FINAL}
DIALOG_ANS_FILE_FINAL=ans.run

# hosts tmp file to ${TMP_DIR}/${HOSTS_TMP_FILE}
HOSTS_TMP_FILE=hosts.tmp

# user define hostname to ${RUN_DIR}/${HOSTNAME_USER_DEFINE_FILE}
HOSTNAME_USER_DEFINE_FILE=hostname_manualconf.run

# network bond temp file
NETWORK_BOND_FILE=network_bond.tmp


######################################################################
# 区域: CEPH Define
# 作用: ceph相关的变量
# 注意：变量以 "CEPH_" 做为前缀
######################################################################

# clustername you want to deploy
CEPH_CLUSTERNAME=ceph


# ceph install mode: [fs|rbd|object]
CEPH_STORAGE_INSTALL_TYPE="file,block,object"


# cluster port, default is 6789
# if you install more than one cluster, you must change port to avail port
CEPH_MON_PORT=6789



# Ceph user & group, DO NOT recommand to change
CEPH_USER=ceph
CEPH_GROUP=ceph
CEPH_UID=167
CEPH_GID=167



# ceph osd filesystem type: {ext4|xfs|btrfs}
# xfs is recommand, ext4 has no journal 
# TODO: only support xfs now, ext4 or btrfs not supported!!
CEPH_OSD_FSTYPE=xfs

# ceph osd make filesystem option
CEPH_OSD_MKFS_OPTION="-f -i size=2048"

# Log size in byte(TODO: How big is the best?)
CEPH_OSD_MKFS_LOGDEV_SIZE="2136997888"

# ceph osd filesystem type mount option
# ceph recommand is: rw,noexec,nodev,noatime,nodiratime,nobarrier, no tested 
CEPH_OSD_MOUNT_OPTION="rw,noatime,nodiratime,attr2,inode64,nobarrier,logbsize=256k,logbufs=8,allocsize=4m"

# ceph osd disk recommand(if less than this value, warning not error)
CEPH_OSD_DISK_MIN=3

# ceph journal partition size(20GB default)
CEPH_OSD_JOURNAL_SIZE=20

# ceph data fragmentation period(days)
CEPH_OSD_FRAG_PERIOD=30



# cluster conf use ${clustername}.conf
CEPH_CONF=/etc/ceph/${CEPH_CLUSTERNAME}.conf

# alias ceph command
CEPH="ceph --cluster=$CEPH_CLUSTERNAME --connect-timeout 10"



# ceph conf templte(DO NOT recommand to use ceph.conf.template)
CEPH_CONF_TEMPLATE=ceph.conf_production.template
CEPH_CONF_TEMPLATE_RENDERED_BY_MON=${CEPH_CLUSTERNAME}.conf.mon.template
CEPH_CONF_TEMPLATE_RENDERED_BY_OSD=${CEPH_CLUSTERNAME}.conf.osd.template
CEPH_CONF_TEMPLATE_RENDERED_BY_MDS=${CEPH_CLUSTERNAME}.conf.mds.template

# ceph replication size
CEPH_OSD_POOL_DEFAULT_SIZE=1
CEPH_OSD_POOL_DEFAULT_MIN_SIZE=1


# ceph fs datapool:metapool name
CEPH_FS_POOL="${CEPH_CLUSTERNAME}_data:${CEPH_CLUSTERNAME}_meta"
CEPH_FS_NAME="${CEPH_CLUSTERNAME}fs"



# ceph的临时状态文件, pusher会自动给后面加上主机名后缀的
# 建议给需要push回installer的变量加上pusher后缀；从installer同步各节点的不需加
CEPH_CLUSTER_STATUS_FILE=ceph_cluster_status.pusher
CEPH_OSD_PARTITION_RESULT=ceph_osd_partition.pusher

CEPH_OSD_ASSIGN_FILE=ceph_osd_assign.run
CEPH_OSD_MANUAL_CONF=ceph_osd_manualconf.run
















